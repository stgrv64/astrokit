20 Janvier 2020 - 

 * identifications des points a travailler / ameliorer / effectuer / analyser ..

-------------------------------------------------------------------------------

20 mars 2022 - 

 * correction problemes de signe dans les MACROS de calcul (AGHx , AZIx, etc..)
 * correction et verification des calculs de toutes les planetes (equatorial -> azimutal)
 * correction de la fonction CALCUL_EQUATEUR
 * correction de l'azimut ( 180 degres au sud)
 * ajout fonction angle vers ddmmss
 
-------------------------------------------------------------------------------

KO => modifier les droits du user stef et astrokit pour avec 
     sudo setcap 'cap_sys_nice=eip' <application>
     pour pouvoir executer les primitives pthread_setschedparam (param.sched_priority)
     => test KO (fin 2021)
     => obligration de passer par sudo
     (probleme en suspens)
     
OK => corriger le calcul CALCUL_EQUATEUR des coordonnees equatoriales 
     a partir de azimut, altitude, et donneees GPS (lat / lon / date / heure )
     (OK, traite )

** => ajouter un facteur de reduction prenant en compte les engrenages / poulies 

** => mettre en place, suite a la correction du bug close gpio[ fd] impactant getch(),
     une implementation NCURSES et TERMIOS et regarder les differences de comportement
     => fait (ok) on conserve le code TERMIOS
     => prevoir interraction avec structure clavier et boucle comme c'est fait 
        avec les fonctions irread / iretc..

** => verifier coeffcient de reduction des moteurs NEQ3.2

* => refaire un thread de suivi du temps pour calcul precis 
     de la duree d un cycle de SUIVI_VOUTE (1 seconde en theorie)
     
* => suite au point precedent, mettre en place le suivi direct a partir de :
     azimut et altitude : 
     => soit entrer directement les coordonnees via la telecommande
     => soit utiliser un capteur type accelerometre
   
  => passer en DOXYGEN integralite du code
  
  => mettre le parametre d inversion (flag de reversibilité) code IR /CLAVIER /etc..
     pour dynamiquement modifier le comportement
  
  => reprendre les fonctions de arguments.c / .h pour les consolider avec getopt
     si besoin, et permettre de tester rapidement sous x86 les differents calculs
     notamment CALCUL_VOUTE, voir comment optimiser cette fonction
  
  => verifier le code de SOLAR_SYSTEM pour obtenir les coordonnees des planetes 
     et leur precision en fonction des calculs flottant 32 ou 64 bits
  
  => mieux gerer le code entourant astre->nom : creer une fonction dediee :
     - en fonction du nom ( PLA0 / MES1 / AZI0 / TST5 / ... par exemple), en deduire : 
       * le type de l'astre 
       * le type de calculs pour aboutir aux vitesses
       * rafraichir tous les calculs necessaires
     (traite partiellement)
  
  => analyser impact d'un rafraichissement plus lent / rapide  de SUIVI_VOUTE 

  => corriger MANUEL_BRUT pour que le suivi brut telecommande permette
     une approximation bonne des vitesses (reprendre les calculs differentiels)
    
  => etudier le retour des fonctions de callback de threads quand 
     exemple donnees->DONNEES_xxx vaut FALSE (return NULL => join ? )
     
  => consolider le contenu des fonctions SUIVI_CLAVIER_NCURSES et
     SUIVI_CLAVIER_TERMIOS en passant par des pointeurs de fonctions (fusion)
     dans une structure DONNEES (elle est en cours de codage actuellement) 
     
  => suite au point precedent , generaliser appels a des pointeurs de fonctions
     en les definissant dans des structures (ASTRE, VOUTE, SUIVI, etc...)
     avec des noms generiques (init / release / etc.. )
     
  => remplacer les printf par les fonctions Syslog<xx> et Trace<x> / TRACE<x>
  
  => remplacer l'ensemble des TRACE longs par des fonctions dediees ou des macros
  
  => etudier passage en static des var glob puis utilisation avec extern
  
  => dans les temporisations , etudier utilisation des semaphores et fcts associees
     sem_wait / sem_post / sem_timedwait (regarder code )
     etudier la performance des attentes par rapport aux usleep / gettimeofday (etc..)
     
  => consolider la DEMANDE de SETUP ( strcmp( clavier->symbole, "SETUP" ) )
     regarder si elle est utile 
     
  => passer les double 64 bits en float 32 bits
     
   => verifier a quel moment on doit faire un CAT_FIND 
  
  => https://lwn.net/Articles/876471/ 
     * etudier la possibilite utlisation gpio-sim driver sur PC intel x86
       pour avoir un comportement le plus identiquement possible que sur RPI ARM
  
  => prevoir de pouvoir quitter le programme avec le clavier (termios/ncurses)
     => OK , touche 'q'
  
  => prevoir lors de TRAP_MAIN un ssty sane avec system (pas besoin de sudo )
  
  => corriger / verifier les calculs flottants notamment lors de la conversion
     des fichiers eto.csv etc... / en eto.csv.dec
  
  => analyser l'interraction avec systemd , et diff avec sysVinit
     notamment lors de la génération des traces à l'écran via la strcuture tty
  
  
     
         

